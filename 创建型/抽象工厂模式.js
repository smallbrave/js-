//由之前的简单工厂模式可以得出，实例化一个对象是直接通过工厂的方式
//将起加工出来，因为工厂里面含有相应的模板

//开放封闭原则的内容：    对拓展开放，对修改封闭。
//说得更准确点，软件实体（类、模块、函数）可以扩展，但是不可修改

//抽象工厂模式不实现对一个类进行创建，而是通过对内的工厂抽象使业务用于对产品类簇（一个大类）的创建

//关于js中的抽象：

function func() {
    this.say = function() {
        throw new Error("还未对其重写");
    }
}
//通过模拟一种行为： 直接调用函数会报错，实现了简单的抽象

//围绕一个超级工厂创建其他工厂
//所谓的抽象工厂模式： 一个拥有抽象方法的父类，供子类进行函数的继承与重写；
//抽象工厂 ==> 具体工厂   抽象产品 ==> 具体产品